# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: 'CI | Java Maven build'

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ $default-branch ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/spring-6-rest-mvc:latest

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - run: echo "Running unit tests for repository ${{ github.repository }}."
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build the application with Maven
        run: mvn --batch-mode --update-snapshots package

      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify

      - name: Test reporting
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: '**/target/surefire-reports/*.xml,**/junit-reports/*.xml'
          reporter: java-junit
          fail-on-error: true

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' && github.ref_name == 'main' }}
          labels: ${{ env.IMAGE }}
          tags: ${{ env.IMAGE }}
